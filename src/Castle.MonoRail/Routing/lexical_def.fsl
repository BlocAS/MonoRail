{ 
module SimpleTokensLex 
 
open System 
 
type token = 
    | ID     of string 
    | STRING of string 
    | DOT | OPEN | CLOSE | SLASH | COLON
    | EOF 
 
let lexeme = Lexing.LexBuffer<_>.LexemeString 
} 
 
let ident      = ':' + ['a'-'z']+ 
let literal    = ['a'-'z']+ 
let newline    = '\n' | '\r' '\n' 
 
rule token = parse 
	| literal    { STRING (lexeme lexbuf)  } 
    | ident      { ID (lexeme lexbuf)  } 
    | '.'        { DOT } 
    | '('        { OPEN } 
    | ')'        { CLOSE } 
    | '/'        { SLASH } 
    | eof        { EOF } 
    | _          { failwithf "unrecognized input: '%s'" (lexeme lexbuf) 
} 	